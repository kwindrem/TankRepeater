#!/bin/bash

# setup Tank Repeater mechanism
# NMEA2000 tank senders that report multiple tanks appear as a single tank in VenusOS
# and ends up being displayed as a constantly changing set of values (one set for each tank)
# The Tank Repeater splits the incoming tank into separate dBus services
# and hides the original, producing stable display
#
# When running from the command line this script asks the user a serise of questions about
# what needs to be done
#
# This script makes use of SetupHelper, a separate package to streamline code in this script
# and automate reinstallation following a Venus software update which overwrites the modifications
# made here. SetupHelper must be installed before running this script.

# Venus files that need to be updated to activeate this package
qmlDir=/opt/victronenergy/gui/qml
overviewMobileFile="$qmlDir/OverviewMobile.qml"
reasonMessageFile="$qmlDir/SystemReasonMessage.qml"

# version that obsoletes TankRepeater
# TankRepeater should not be run STARTING with this version
# CommonResources will set scriptAction to UNINSTALL
# and prevent installation if Venus version is at this version or later
obsoleteVersion="v2.70~12"

# log file for this package (if any)
# leave null ("") if there isn't one
packageLogFile="/var/log/TankRepeater/current"

actionText=""

#### following lines incorporate SetupHelper utilities into this script
# Refer to the SetupHelper ReadMe file for details.
    
source "/data/SetupHelper/CommonResources"

#### end of lines to include SetupHelper

#### running manually and OK to proceed - prompt for input
if [ $scriptAction == 'NONE' ] ; then
    echo
    echo "The Tank Repeater provides a stable display for"
    echo "NMEA2000 tank systems that report multiple tanks"
    echo
    standardActionPrompt
fi

#### here to do the actual work

if [ $scriptAction == 'INSTALL' ] ; then
    logMessage "++ Installing repeater"

    updateActiveFile "$overviewMobileFile"

    service="/service/TankRepeater"
    if [ ! -e "$service" ]; then
        logMessage "starting repeater service"
        ln -s $scriptDir/service "$service"
    elif ! $runningAtBoot; then
        logMessage "restarting repeater service"
        svc -t "$service"
    fi
    if $filesUpdated ; then
        restartGui=true
    fi
fi

# #### uninstalling - check scriptAction again
# if an install step failed package needs to be removed
if [ $scriptAction == 'UNINSTALL' ] ; then
    logMessage "++ Uninstalling repeater"

    # remove and stop repeater service
    # exclude process names that include this script's PID ($$)
    # so this startup script isn't killed in the process!
    if [ -e /service/TankRepeater ]; then
        logMessage "removing repeater service"
        rm -rf /service/TankRepeater
        ps -l | grep TankRepeater | grep -v -e grep -e $$  | awk '{print $3}' | xargs kill > /dev/null 2>&1
    fi

echo $pkgFileSets

    if [ -f "$fileSet"/NOT_COMPATIBLE ]; then
        logMessage "removing all TankRepeater dBus settings"
        dbus -y com.victronenergy.settings /Settings RemoveSettings\
            '%[ "Devices/TankRepeater/IncomingTankService", "Devices/TankRepeater/IncomingTankProductId",\
                "Devices/TankRepeater/Tank0/CustomName", "Devices/TankRepeater/Tank1/CustomName",\
                "Devices/TankRepeater/Tank2/CustomName", "Devices/TankRepeater/Tank3/CustomName",\
                "Devices/TankRepeater/Tank4/CustomName", "Devices/TankRepeater/Tank5/CustomName",\
                "Devices/TankRepeater/Tank6/CustomName", "Devices/TankRepeater/Tank7/CustomName",\
                "Devices/TankRepeater/Tank8/CustomName", "Devices/TankRepeater/Tank9/CustomName",\
                "Devices/TankRepeater/Tank10/CustomName", "Devices/TankRepeater/Tank11/CustomName",\
                "Devices/TankRepeater/Tank12/CustomName", "Devices/TankRepeater/Tank13/CustomName",\
                "Devices/TankRepeater/Tank8/CustomName", "Devices/TankRepeater/Tank9/CustomName",\
              ]' > /dev/null
    else
        serviceName=$(dbus -y com.victronenergy.settings "/Settings/Devices/TankRepeater/IncomingTankService" GetValue)
        if [ $serviceName != "''" ] ; then
            logMessage "unhiding original Tank dBus service"
        fi
        dbus -y com.victronenergy.settings /Settings RemoveSettings\
            '%[ "Devices/TankRepeater/IncomingTankService", "Devices/TankRepeater/IncomingTankProductId" ]' > /dev/null
        fi
    restoreActiveFile "$overviewMobileFile"
fi

if $filesUpdated ; then
    restartGui=true
fi

# thats all folks - SCRIPT EXITS INSIDE THE FUNCTION
endScript


